import numpy as np
import csv

data = np.load('data.npy')


# # Save original 16-bit values to CSV (before scaling)
# with open("raw.csv", mode='w', newline='') as csv_file:
#     writer = csv.writer(csv_file)
#     writer.writerow(["Sample Index", "Raw"])
#     for i, el in enumerate(data):
#         writer.writerow([i, el])
# print("Saved: raw.csv")

samples = []
for i in range(0, len(data), 2):  # Process two bytes (16 bits) per sample
    lsb = int(data[i])
    msb = int(data[i+1])
    # Combine the LSB and MSB to get a 12-bit sample (only lower 12 bits)
    sample = ((msb & 0x0F) << 8) | lsb  # The 4 MSB bits are discarded
    samples.append(sample)
samples = np.array(samples)
print(len(data))
print(len(samples))

# # Save original 16-bit values to CSV (before scaling)
# with open("sample.csv", mode='w', newline='') as csv_file:
#     writer = csv.writer(csv_file)
#     writer.writerow(["Sample Index", "Raw"])
#     for i, el in enumerate(samples):
#         writer.writerow([i, el])
# print("Saved: sample.csv")

# zero_indices = np.where(samples == 0)[0]
# print(zero_indices)
# print(len(zero_indices))
